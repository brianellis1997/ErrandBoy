version: '3.8'

services:
  app:
    build: .
    container_name: groupchat-app
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    depends_on:
      - db
      - redis
    volumes:
      - ./static:/app/static
      - ./logs:/app/logs
    networks:
      - groupchat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    container_name: groupchat-db
    restart: always
    environment:
      POSTGRES_DB: groupchat
      POSTGRES_USER: groupchat_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - groupchat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U groupchat_user -d groupchat"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: groupchat-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - groupchat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: groupchat-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/usr/share/nginx/html/static
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - groupchat-network

volumes:
  postgres_data:
  redis_data:

networks:
  groupchat-network:
    driver: bridge